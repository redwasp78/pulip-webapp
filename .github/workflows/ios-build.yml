name: iOS Build

on:
  push:
    branches: [ main ]
    paths:
      - 'ios/**'
      - 'lib/**'
      - 'pubspec.yaml'
      - '.github/workflows/ios-build.yml'
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Select iOS build type'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  ios-build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: |
          flutter pub get
          flutter pub upgrade
      
      - name: Clean previous builds
        run: flutter clean
      
      - name: Verify Firebase configuration
        run: |
          if [ -f "ios/Runner/GoogleService-Info.plist" ]; then
            echo "✅ GoogleService-Info.plist found"
            echo "Bundle ID: $(plutil -extract BUNDLE_ID raw ios/Runner/GoogleService-Info.plist)"
            echo "Project ID: $(plutil -extract PROJECT_ID raw ios/Runner/GoogleService-Info.plist)"
          else
            echo "❌ GoogleService-Info.plist not found"
            exit 1
          fi
      
      - name: Build iOS
        run: flutter build ios --${{ inputs.build_type || 'debug' }} --no-codesign
      
      - name: Create IPA from .app bundle
        if: inputs.build_type == 'release' || github.event.inputs.build_type == 'release'
        run: |
          echo "Creating IPA directory structure..."
          mkdir -p build/ios/ipa
          
          echo "Checking build output directory..."
          ls -la build/ios/
          
          echo "Checking for Runner.app..."
          if [ -d "build/ios/iphoneos/Runner.app" ]; then
            echo "✅ Runner.app found in build/ios/iphoneos/"
            cd build/ios/iphoneos
            echo "Current directory: $(pwd)"
            echo "Contents: $(ls -la)"
            
            echo "Creating IPA file..."
            zip -r ../../ipa/Runner.ipa Runner.app
            echo "✅ IPA created: build/ios/ipa/Runner.ipa"
            
            echo "Verifying IPA file..."
            ls -la ../../ipa/
          else
            echo "❌ Runner.app not found in build/ios/iphoneos/"
            echo "Available directories:"
            find build/ios -name "*.app" -type d
            exit 1
          fi
      
      - name: Upload iOS Build (.app)
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ inputs.build_type || 'debug' }}-app
          path: build/ios/iphoneos/Runner.app
      
      - name: Upload iOS Build (.ipa)
        if: inputs.build_type == 'release' || github.event.inputs.build_type == 'release'
        uses: actions/upload-artifact@v4
        with:
          name: ios-${{ inputs.build_type || 'debug' }}-ipa
          path: build/ios/ipa/Runner.ipa
      
      - name: Build Summary
        run: |
          echo "## 🍎 iOS Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Type**: ${{ inputs.build_type || 'debug' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Runner**: ${{ runner.os }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📱 Generated Artifacts:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ iOS ${{ inputs.build_type || 'debug' }} App Bundle (.app)" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ inputs.build_type || 'debug' }}" == "release" ]]; then
            echo "- ✅ iOS ${{ inputs.build_type || 'debug' }} IPA Package (.ipa)" >> $GITHUB_STEP_SUMMARY
          fi
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Note**: iOS builds are unsigned. For App Store distribution, additional code signing setup is required."