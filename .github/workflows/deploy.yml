name: Deploy to App Stores

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to deploy to'
        required: true
        default: 'android'
        type: choice
        options:
        - android
        - ios
        - both
      track:
        description: 'Deployment track'
        required: true
        default: 'internal'
        type: choice
        options:
        - internal
        - alpha
        - beta
        - production

jobs:
  deploy-android:
    if: ${{ github.event.inputs.platform == 'android' || github.event.inputs.platform == 'both' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get

      - name: Setup Firebase for Android
        run: |
          echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json

      - name: Build Android Bundle
        run: flutter build appbundle --release

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Install Fastlane
        run: |
          gem install fastlane

      - name: Deploy to Google Play
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
        run: |
          cd android
          fastlane deploy_internal

  deploy-ios:
    if: ${{ github.event.inputs.platform == 'ios' || github.event.inputs.platform == 'both' }}
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get

      - name: Setup Firebase for iOS
        run: |
          echo '${{ secrets.GOOGLE_SERVICE_INFO_PLIST }}' > ios/Runner/GoogleService-Info.plist

      - name: Build iOS IPA
        run: flutter build ipa --release

      - name: Setup Fastlane
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true

      - name: Install Fastlane
        run: |
          gem install fastlane

      - name: Deploy to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY }}
        run: |
          cd ios
          fastlane deploy





