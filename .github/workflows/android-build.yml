name: Android Build

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  android-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Flutter Doctor
        run: flutter doctor -v
      
      - name: Build Debug APK
        run: |
          mkdir -p build_logs
          echo "Starting Flutter debug build with verbose logs..."
          flutter build apk --debug -v 2>&1 | tee build_logs/flutter_build_debug.log

      - name: Inspect build outputs
        id: inspect_build_outputs
        if: always()
        run: |
          echo "Listing build/app/outputs..."
          ls -R build/app/outputs || true
          echo "Resolving APK path..."
          APK_PATH=""
          # Common Flutter output
          if ls build/app/outputs/flutter-apk/*.apk >/dev/null 2>&1; then
            APK_PATH=$(ls -1 build/app/outputs/flutter-apk/*.apk | head -n1)
          # Gradle vanilla output
          elif ls build/app/outputs/apk/debug/*.apk >/dev/null 2>&1; then
            APK_PATH=$(ls -1 build/app/outputs/apk/debug/*.apk | head -n1)
          # Fallback: any apk under build/**/outputs/**
          elif ls build/**/outputs/**/*.apk >/dev/null 2>&1; then
            APK_PATH=$(ls -1 build/**/outputs/**/*.apk | head -n1)
          fi
          echo "apk_path=$APK_PATH" >> $GITHUB_OUTPUT
          echo "APK_PATH=$APK_PATH" >> $GITHUB_ENV
          if [ -z "$APK_PATH" ]; then
            echo "No APK found in common locations.";
          else
            echo "Found APK: $APK_PATH";
          fi

      - name: Fail if APK not found
        if: always()
        run: |
          if [ -z "${{ steps.inspect_build_outputs.outputs.apk_path }}" ] && [ -z "${{ env.APK_PATH }}" ]; then
            echo "APK was not generated. Failing the job to surface logs.";
            exit 1
          fi
      
      - name: Upload Debug APK
        if: ${{ steps.inspect_build_outputs.outputs.apk_path != '' || env.APK_PATH != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-apk
          path: ${{ steps.inspect_build_outputs.outputs.apk_path || env.APK_PATH }}
      
      - name: Upload Debug Logs (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-debug-logs
          path: |
            build_logs/**
            ~/.gradle/daemon/**/*
            android/app/build/outputs/logs/**
            android/build/reports/**

      - name: Build Failure Summary (tail logs)
        if: failure()
        run: |
          echo "## ❌ Android Build Failed" >> $GITHUB_STEP_SUMMARY
          echo "### 📄 Last 200 lines of flutter_build_debug.log" >> $GITHUB_STEP_SUMMARY
          tail -n 200 build_logs/flutter_build_debug.log >> $GITHUB_STEP_SUMMARY

      - name: Build Summary
        run: |
          echo "## 🤖 Android Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "- **Generated**: Android Debug APK" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Logs**: Attached as artifacts (android-debug-logs)" >> $GITHUB_STEP_SUMMARY
          fi